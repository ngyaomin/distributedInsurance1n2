webpackHotUpdate(6,{

/***/ 1560:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__resourceQuery) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = __webpack_require__(86);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(87);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = __webpack_require__(41);

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(15);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(16);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(42);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(46);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(17);

var _react2 = _interopRequireDefault(_react);

var _factory = __webpack_require__(1253);

var _factory2 = _interopRequireDefault(_factory);

var _semanticUiReact = __webpack_require__(479);

var _Layout = __webpack_require__(944);

var _Layout2 = _interopRequireDefault(_Layout);

var _routes = __webpack_require__(607);

var _reactNativeTextTicker = __webpack_require__(1561);

var _reactNativeTextTicker2 = _interopRequireDefault(_reactNativeTextTicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = '/Users/yaomin/distributedInsurance/pages/index.js?entry';


var InsurancePoolIndex = function (_Component) {
  (0, _inherits3.default)(InsurancePoolIndex, _Component);

  function InsurancePoolIndex() {
    (0, _classCallCheck3.default)(this, InsurancePoolIndex);

    return (0, _possibleConstructorReturn3.default)(this, (InsurancePoolIndex.__proto__ || (0, _getPrototypeOf2.default)(InsurancePoolIndex)).apply(this, arguments));
  }

  (0, _createClass3.default)(InsurancePoolIndex, [{
    key: 'renderInsurancePools',
    value: function renderInsurancePools() {
      var items = this.props.insurancePools.map(function (address) {
        return {
          header: address,
          description: _react2.default.createElement('div', {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 23
            }
          }, _react2.default.createElement('i', { 'class': 'hand point right outline icon', __source: {
              fileName: _jsxFileName,
              lineNumber: 24
            }
          }), _react2.default.createElement(_routes.Link, { route: '/insurancepools/' + address, __source: {
              fileName: _jsxFileName,
              lineNumber: 25
            }
          }, _react2.default.createElement('a', {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 26
            }
          }, _react2.default.createElement('b', {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 26
            }
          }, _react2.default.createElement('mark', {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 26
            }
          }, 'View Insurance Pool')))), '\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0', _react2.default.createElement('i', { 'class': 'ethereum icon', __source: {
              fileName: _jsxFileName,
              lineNumber: 29
            }
          }), _react2.default.createElement(_routes.Link, { route: 'https://rinkeby.etherscan.io/address/' + address, __source: {
              fileName: _jsxFileName,
              lineNumber: 30
            }
          }, _react2.default.createElement('a', { target: '_blank', __source: {
              fileName: _jsxFileName,
              lineNumber: 31
            }
          }, 'View in Ether Scan'))),
          fluid: true
        };
      });

      return _react2.default.createElement(_semanticUiReact.Card.Group, { items: items, __source: {
          fileName: _jsxFileName,
          lineNumber: 39
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(_Layout2.default, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 44
        }
      }, _react2.default.createElement(_reactNativeTextTicker2.default, {
        style: { fontSize: 24 },
        duration: 3000,
        loop: true,
        bounce: true,
        repeatSpacer: 50,
        marqueeDelay: 1000,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 45
        }
      }, 'Super long piece of text is long. The quick brown fox jumps over the lazy dog.'), _react2.default.createElement('div', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 55
        }
      }, _react2.default.createElement('h7', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 56
        }
      }, 'We are not rasing any money, we are only accepting donations.', _react2.default.createElement('br', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 57
        }
      }), ' for more info email \xA0', _react2.default.createElement('a', { href: 'mailto:NG_YAO_MIN01.PT@ICHAT.SP.EDU.SG', __source: {
          fileName: _jsxFileName,
          lineNumber: 58
        }
      }, _react2.default.createElement('u', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 59
        }
      }, 'givemeyourmoney@cheatyourmoney.io')), _react2.default.createElement('br', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 61
        }
      }), 'you can also see our latest smart contract', _react2.default.createElement('br', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 63
        }
      }), _react2.default.createElement('a', { target: '_blank', href: 'https://rinkeby.etherscan.io/address/0xc7A9e3Eac2dA6a5D1Dd5a6058a8b0DC530c5f41A', __source: {
          fileName: _jsxFileName,
          lineNumber: 64
        }
      }, '\'0xc7A9e3Eac2dA6a5D1Dd5a6058a8b0DC530c5f41A\'')), _react2.default.createElement('h3', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 68
        }
      }, 'Open Insurance Pools'), _react2.default.createElement(_routes.Link, { route: '/insurancepools/new', __source: {
          fileName: _jsxFileName,
          lineNumber: 70
        }
      }, _react2.default.createElement('a', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 71
        }
      }, _react2.default.createElement(_semanticUiReact.Button, {
        floated: 'right',
        content: 'Create InsurancePool',
        icon: 'add circle' // the icon name is in document, be exact
        , primary: true,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 72
        }
      }))), this.renderInsurancePools()));
    }
  }], [{
    key: 'getInitialProps',

    // creating a instance of class to get access to
    // static asign the function not to instance of the class but to class itself

    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        var insurancePools;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _factory2.default.methods.getDeployedInsurancePools().call();

              case 2:
                insurancePools = _context.sent;
                return _context.abrupt('return', { insurancePools: insurancePools });

              case 4:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getInitialProps() {
        return _ref.apply(this, arguments);
      }

      return getInitialProps;
    }()
  }]);

  return InsurancePoolIndex;
}(_react.Component);

exports.default = InsurancePoolIndex;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwiSW5zdXJhbmNlUG9vbEluZGV4IiwiX0NvbXBvbmVudCIsIl9fcHJvdG9fXyIsImFwcGx5IiwiYXJndW1lbnRzIiwia2V5IiwidmFsdWUiLCJyZW5kZXJJbnN1cmFuY2VQb29scyIsIml0ZW1zIiwicHJvcHMiLCJpbnN1cmFuY2VQb29scyIsIm1hcCIsImFkZHJlc3MiLCJoZWFkZXIiLCJkZXNjcmlwdGlvbiIsImNyZWF0ZUVsZW1lbnQiLCJfX3NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsInJvdXRlIiwidGFyZ2V0IiwiZmx1aWQiLCJHcm91cCIsInJlbmRlciIsInN0eWxlIiwiZm9udFNpemUiLCJkdXJhdGlvbiIsImxvb3AiLCJib3VuY2UiLCJyZXBlYXRTcGFjZXIiLCJtYXJxdWVlRGVsYXkiLCJocmVmIiwiZmxvYXRlZCIsImNvbnRlbnQiLCJpY29uIiwicHJpbWFyeSIsIl9yZWYiLCJtYXJrIiwiX2NhbGxlZSIsIndyYXAiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwicHJldiIsIm5leHQiLCJtZXRob2RzIiwiZ2V0RGVwbG95ZWRJbnN1cmFuY2VQb29scyIsImNhbGwiLCJzZW50IiwiYWJydXB0Iiwic3RvcCIsImdldEluaXRpYWxQcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7Ozs7O0FBTkEsSUFBSUEsZUFBZSx5REFBbkI7OztBQVFBLElBQUlDLHFCQUFxQixVQUFVQyxVQUFWLEVBQXNCO0FBQzdDLDBCQUFVRCxrQkFBVixFQUE4QkMsVUFBOUI7O0FBRUEsV0FBU0Qsa0JBQVQsR0FBOEI7QUFDNUIsa0NBQWdCLElBQWhCLEVBQXNCQSxrQkFBdEI7O0FBRUEsV0FBTyx5Q0FBMkIsSUFBM0IsRUFBaUMsQ0FBQ0EsbUJBQW1CRSxTQUFuQixJQUFnQyw4QkFBdUJGLGtCQUF2QixDQUFqQyxFQUE2RUcsS0FBN0UsQ0FBbUYsSUFBbkYsRUFBeUZDLFNBQXpGLENBQWpDLENBQVA7QUFDRDs7QUFFRCw2QkFBYUosa0JBQWIsRUFBaUMsQ0FBQztBQUNoQ0ssU0FBSyxzQkFEMkI7QUFFaENDLFdBQU8sU0FBU0Msb0JBQVQsR0FBZ0M7QUFDckMsVUFBSUMsUUFBUSxLQUFLQyxLQUFMLENBQVdDLGNBQVgsQ0FBMEJDLEdBQTFCLENBQThCLFVBQVVDLE9BQVYsRUFBbUI7QUFDM0QsZUFBTztBQUNMQyxrQkFBUUQsT0FESDtBQUVMRSx1QkFBYSxnQkFBTUMsYUFBTixDQUNYLEtBRFcsRUFFWDtBQUNFQyxzQkFBVTtBQUNSQyx3QkFBVWxCLFlBREY7QUFFUm1CLDBCQUFZO0FBRko7QUFEWixXQUZXLEVBUVgsZ0JBQU1ILGFBQU4sQ0FBb0IsR0FBcEIsRUFBeUIsRUFBRSxTQUFTLCtCQUFYLEVBQTRDQyxVQUFVO0FBQzNFQyx3QkFBVWxCLFlBRGlFO0FBRTNFbUIsMEJBQVk7QUFGK0Q7QUFBdEQsV0FBekIsQ0FSVyxFQWFYLGdCQUFNSCxhQUFOLGVBRUUsRUFBRUksT0FBTyxxQkFBcUJQLE9BQTlCLEVBQXVDSSxVQUFVO0FBQzdDQyx3QkFBVWxCLFlBRG1DO0FBRTdDbUIsMEJBQVk7QUFGaUM7QUFBakQsV0FGRixFQU9FLGdCQUFNSCxhQUFOLENBQ0UsR0FERixFQUVFO0FBQ0VDLHNCQUFVO0FBQ1JDLHdCQUFVbEIsWUFERjtBQUVSbUIsMEJBQVk7QUFGSjtBQURaLFdBRkYsRUFRRSxnQkFBTUgsYUFBTixDQUNFLEdBREYsRUFFRTtBQUNFQyxzQkFBVTtBQUNSQyx3QkFBVWxCLFlBREY7QUFFUm1CLDBCQUFZO0FBRko7QUFEWixXQUZGLEVBUUUsZ0JBQU1ILGFBQU4sQ0FDRSxNQURGLEVBRUU7QUFDRUMsc0JBQVU7QUFDUkMsd0JBQVVsQixZQURGO0FBRVJtQiwwQkFBWTtBQUZKO0FBRFosV0FGRixFQVFFLHFCQVJGLENBUkYsQ0FSRixDQVBGLENBYlcsRUFpRFgsMENBakRXLEVBa0RYLGdCQUFNSCxhQUFOLENBQW9CLEdBQXBCLEVBQXlCLEVBQUUsU0FBUyxlQUFYLEVBQTRCQyxVQUFVO0FBQzNEQyx3QkFBVWxCLFlBRGlEO0FBRTNEbUIsMEJBQVk7QUFGK0M7QUFBdEMsV0FBekIsQ0FsRFcsRUF1RFgsZ0JBQU1ILGFBQU4sZUFFRSxFQUFFSSxPQUFPLDBDQUEwQ1AsT0FBbkQsRUFBNERJLFVBQVU7QUFDbEVDLHdCQUFVbEIsWUFEd0Q7QUFFbEVtQiwwQkFBWTtBQUZzRDtBQUF0RSxXQUZGLEVBT0UsZ0JBQU1ILGFBQU4sQ0FDRSxHQURGLEVBRUUsRUFBRUssUUFBUSxRQUFWLEVBQW9CSixVQUFVO0FBQzFCQyx3QkFBVWxCLFlBRGdCO0FBRTFCbUIsMEJBQVk7QUFGYztBQUE5QixXQUZGLEVBT0Usb0JBUEYsQ0FQRixDQXZEVyxDQUZSO0FBMkVMRyxpQkFBTztBQTNFRixTQUFQO0FBNkVELE9BOUVXLENBQVo7O0FBZ0ZBLGFBQU8sZ0JBQU1OLGFBQU4sQ0FBb0Isc0JBQUtPLEtBQXpCLEVBQWdDLEVBQUVkLE9BQU9BLEtBQVQsRUFBZ0JRLFVBQVU7QUFDN0RDLG9CQUFVbEIsWUFEbUQ7QUFFN0RtQixzQkFBWTtBQUZpRDtBQUExQixPQUFoQyxDQUFQO0FBS0Q7QUF4RitCLEdBQUQsRUF5RjlCO0FBQ0RiLFNBQUssUUFESjtBQUVEQyxXQUFPLFNBQVNpQixNQUFULEdBQWtCO0FBQ3ZCLGFBQU8sZ0JBQU1SLGFBQU4sbUJBRUw7QUFDRUMsa0JBQVU7QUFDUkMsb0JBQVVsQixZQURGO0FBRVJtQixzQkFBWTtBQUZKO0FBRFosT0FGSyxFQVFMLGdCQUFNSCxhQUFOLGtDQUVFO0FBQ0VTLGVBQU8sRUFBRUMsVUFBVSxFQUFaLEVBRFQ7QUFFRUMsa0JBQVUsSUFGWjtBQUdFQyxjQUFNLElBSFI7QUFJRUMsZ0JBQVEsSUFKVjtBQUtFQyxzQkFBYyxFQUxoQjtBQU1FQyxzQkFBYyxJQU5oQjtBQU9FZCxrQkFBVTtBQUNSQyxvQkFBVWxCLFlBREY7QUFFUm1CLHNCQUFZO0FBRko7QUFQWixPQUZGLEVBY0UsZ0ZBZEYsQ0FSSyxFQXdCTCxnQkFBTUgsYUFBTixDQUNFLEtBREYsRUFFRTtBQUNFQyxrQkFBVTtBQUNSQyxvQkFBVWxCLFlBREY7QUFFUm1CLHNCQUFZO0FBRko7QUFEWixPQUZGLEVBUUUsZ0JBQU1ILGFBQU4sQ0FDRSxJQURGLEVBRUU7QUFDRUMsa0JBQVU7QUFDUkMsb0JBQVVsQixZQURGO0FBRVJtQixzQkFBWTtBQUZKO0FBRFosT0FGRixFQVFFLCtEQVJGLEVBU0UsZ0JBQU1ILGFBQU4sQ0FBb0IsSUFBcEIsRUFBMEI7QUFDeEJDLGtCQUFVO0FBQ1JDLG9CQUFVbEIsWUFERjtBQUVSbUIsc0JBQVk7QUFGSjtBQURjLE9BQTFCLENBVEYsRUFlRSwyQkFmRixFQWdCRSxnQkFBTUgsYUFBTixDQUNFLEdBREYsRUFFRSxFQUFFZ0IsTUFBTSx3Q0FBUixFQUFrRGYsVUFBVTtBQUN4REMsb0JBQVVsQixZQUQ4QztBQUV4RG1CLHNCQUFZO0FBRjRDO0FBQTVELE9BRkYsRUFPRSxnQkFBTUgsYUFBTixDQUNFLEdBREYsRUFFRTtBQUNFQyxrQkFBVTtBQUNSQyxvQkFBVWxCLFlBREY7QUFFUm1CLHNCQUFZO0FBRko7QUFEWixPQUZGLEVBUUUsbUNBUkYsQ0FQRixDQWhCRixFQWtDRSxnQkFBTUgsYUFBTixDQUFvQixJQUFwQixFQUEwQjtBQUN4QkMsa0JBQVU7QUFDUkMsb0JBQVVsQixZQURGO0FBRVJtQixzQkFBWTtBQUZKO0FBRGMsT0FBMUIsQ0FsQ0YsRUF3Q0UsNENBeENGLEVBeUNFLGdCQUFNSCxhQUFOLENBQW9CLElBQXBCLEVBQTBCO0FBQ3hCQyxrQkFBVTtBQUNSQyxvQkFBVWxCLFlBREY7QUFFUm1CLHNCQUFZO0FBRko7QUFEYyxPQUExQixDQXpDRixFQStDRSxnQkFBTUgsYUFBTixDQUNFLEdBREYsRUFFRSxFQUFFSyxRQUFRLFFBQVYsRUFBb0JXLE1BQU0saUZBQTFCLEVBQTZHZixVQUFVO0FBQ25IQyxvQkFBVWxCLFlBRHlHO0FBRW5IbUIsc0JBQVk7QUFGdUc7QUFBdkgsT0FGRixFQU9FLGdEQVBGLENBL0NGLENBUkYsRUFpRUUsZ0JBQU1ILGFBQU4sQ0FDRSxJQURGLEVBRUU7QUFDRUMsa0JBQVU7QUFDUkMsb0JBQVVsQixZQURGO0FBRVJtQixzQkFBWTtBQUZKO0FBRFosT0FGRixFQVFFLHNCQVJGLENBakVGLEVBMkVFLGdCQUFNSCxhQUFOLGVBRUUsRUFBRUksT0FBTyxxQkFBVCxFQUFnQ0gsVUFBVTtBQUN0Q0Msb0JBQVVsQixZQUQ0QjtBQUV0Q21CLHNCQUFZO0FBRjBCO0FBQTFDLE9BRkYsRUFPRSxnQkFBTUgsYUFBTixDQUNFLEdBREYsRUFFRTtBQUNFQyxrQkFBVTtBQUNSQyxvQkFBVWxCLFlBREY7QUFFUm1CLHNCQUFZO0FBRko7QUFEWixPQUZGLEVBUUUsZ0JBQU1ILGFBQU4sMEJBQTRCO0FBQzFCaUIsaUJBQVMsT0FEaUI7QUFFMUJDLGlCQUFTLHNCQUZpQjtBQUcxQkMsY0FBTSxZQUhvQixDQUdQO0FBSE8sVUFJeEJDLFNBQVMsSUFKZTtBQUsxQm5CLGtCQUFVO0FBQ1JDLG9CQUFVbEIsWUFERjtBQUVSbUIsc0JBQVk7QUFGSjtBQUxnQixPQUE1QixDQVJGLENBUEYsQ0EzRUYsRUFzR0UsS0FBS1gsb0JBQUwsRUF0R0YsQ0F4QkssQ0FBUDtBQWlJRDtBQXBJQSxHQXpGOEIsQ0FBakMsRUE4TkksQ0FBQztBQUNIRixTQUFLLGlCQURGOztBQUdIO0FBQ0E7O0FBRUFDLFdBQU8sWUFBWTtBQUNqQixVQUFJOEIsT0FBTyxpQ0FBbUIsYUFBYSxzQkFBb0JDLElBQXBCLENBQXlCLFNBQVNDLE9BQVQsR0FBbUI7QUFDckYsWUFBSTVCLGNBQUo7QUFDQSxlQUFPLHNCQUFvQjZCLElBQXBCLENBQXlCLFNBQVNDLFFBQVQsQ0FBa0JDLFFBQWxCLEVBQTRCO0FBQzFELGlCQUFPLENBQVAsRUFBVTtBQUNSLG9CQUFRQSxTQUFTQyxJQUFULEdBQWdCRCxTQUFTRSxJQUFqQztBQUNFLG1CQUFLLENBQUw7QUFDRUYseUJBQVNFLElBQVQsR0FBZ0IsQ0FBaEI7QUFDQSx1QkFBTyxrQkFBUUMsT0FBUixDQUFnQkMseUJBQWhCLEdBQTRDQyxJQUE1QyxFQUFQOztBQUVGLG1CQUFLLENBQUw7QUFDRXBDLGlDQUFpQitCLFNBQVNNLElBQTFCO0FBQ0EsdUJBQU9OLFNBQVNPLE1BQVQsQ0FBZ0IsUUFBaEIsRUFBMEIsRUFBRXRDLGdCQUFnQkEsY0FBbEIsRUFBMUIsQ0FBUDs7QUFFRixtQkFBSyxDQUFMO0FBQ0EsbUJBQUssS0FBTDtBQUNFLHVCQUFPK0IsU0FBU1EsSUFBVCxFQUFQO0FBWEo7QUFhRDtBQUNGLFNBaEJNLEVBZ0JKWCxPQWhCSSxFQWdCSyxJQWhCTCxDQUFQO0FBaUJELE9BbkIwQyxDQUFoQyxDQUFYOztBQXFCQSxlQUFTWSxlQUFULEdBQTJCO0FBQ3pCLGVBQU9kLEtBQUtqQyxLQUFMLENBQVcsSUFBWCxFQUFpQkMsU0FBakIsQ0FBUDtBQUNEOztBQUVELGFBQU84QyxlQUFQO0FBQ0QsS0EzQk07QUFOSixHQUFELENBOU5KOztBQWtRQSxTQUFPbEQsa0JBQVA7QUFDRCxDQTVRd0Isa0JBQXpCOztrQkE4UWVBLGtCIiwiZmlsZSI6InVua25vd24iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICdiYWJlbC1ydW50aW1lL3JlZ2VuZXJhdG9yJztcbmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICdiYWJlbC1ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvcic7XG5pbXBvcnQgX09iamVjdCRnZXRQcm90b3R5cGVPZiBmcm9tICdiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YnO1xuaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2snO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MnO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuJztcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSAnYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzJztcbnZhciBfanN4RmlsZU5hbWUgPSAnL1VzZXJzL3lhb21pbi9kaXN0cmlidXRlZEluc3VyYW5jZS9wYWdlcy9pbmRleC5qcz9lbnRyeSc7XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50LCBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGZhY3RvcnkgZnJvbSAnLi4vZXRoZXJldW0vZmFjdG9yeSc7XG5pbXBvcnQgeyBDYXJkLCBCdXR0b24gfSBmcm9tICdzZW1hbnRpYy11aS1yZWFjdCc7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICcuLi9yb3V0ZXMnO1xuaW1wb3J0IFRleHRUaWNrZXIgZnJvbSAncmVhY3QtbmF0aXZlLXRleHQtdGlja2VyJztcblxudmFyIEluc3VyYW5jZVBvb2xJbmRleCA9IGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhJbnN1cmFuY2VQb29sSW5kZXgsIF9Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEluc3VyYW5jZVBvb2xJbmRleCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSW5zdXJhbmNlUG9vbEluZGV4KTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoSW5zdXJhbmNlUG9vbEluZGV4Ll9fcHJvdG9fXyB8fCBfT2JqZWN0JGdldFByb3RvdHlwZU9mKEluc3VyYW5jZVBvb2xJbmRleCkpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEluc3VyYW5jZVBvb2xJbmRleCwgW3tcbiAgICBrZXk6ICdyZW5kZXJJbnN1cmFuY2VQb29scycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlckluc3VyYW5jZVBvb2xzKCkge1xuICAgICAgdmFyIGl0ZW1zID0gdGhpcy5wcm9wcy5pbnN1cmFuY2VQb29scy5tYXAoZnVuY3Rpb24gKGFkZHJlc3MpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBoZWFkZXI6IGFkZHJlc3MsXG4gICAgICAgICAgZGVzY3JpcHRpb246IFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDIzXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCdpJywgeyAnY2xhc3MnOiAnaGFuZCBwb2ludCByaWdodCBvdXRsaW5lIGljb24nLCBfX3NvdXJjZToge1xuICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgbGluZU51bWJlcjogMjRcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICBMaW5rLFxuICAgICAgICAgICAgICB7IHJvdXRlOiAnL2luc3VyYW5jZXBvb2xzLycgKyBhZGRyZXNzLCBfX3NvdXJjZToge1xuICAgICAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDI1XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICdhJyxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBfX3NvdXJjZToge1xuICAgICAgICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgICAgICBsaW5lTnVtYmVyOiAyNlxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICdiJyxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDI2XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAnbWFyaycsXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBfX3NvdXJjZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDI2XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAnVmlldyBJbnN1cmFuY2UgUG9vbCdcbiAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICAnXFx4QTBcXHhBMFxceEEwXFx4QTBcXHhBMFxceEEwXFx4QTBcXHhBMFxceEEwXFx4QTAnLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgnaScsIHsgJ2NsYXNzJzogJ2V0aGVyZXVtIGljb24nLCBfX3NvdXJjZToge1xuICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgbGluZU51bWJlcjogMjlcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICBMaW5rLFxuICAgICAgICAgICAgICB7IHJvdXRlOiAnaHR0cHM6Ly9yaW5rZWJ5LmV0aGVyc2Nhbi5pby9hZGRyZXNzLycgKyBhZGRyZXNzLCBfX3NvdXJjZToge1xuICAgICAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDMwXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICdhJyxcbiAgICAgICAgICAgICAgICB7IHRhcmdldDogJ19ibGFuaycsIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDMxXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnVmlldyBpbiBFdGhlciBTY2FuJ1xuICAgICAgICAgICAgICApXG4gICAgICAgICAgICApXG4gICAgICAgICAgKSxcbiAgICAgICAgICBmbHVpZDogdHJ1ZVxuICAgICAgICB9O1xuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENhcmQuR3JvdXAsIHsgaXRlbXM6IGl0ZW1zLCBfX3NvdXJjZToge1xuICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgbGluZU51bWJlcjogMzlcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVuZGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIExheW91dCxcbiAgICAgICAge1xuICAgICAgICAgIF9fc291cmNlOiB7XG4gICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgbGluZU51bWJlcjogNDRcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgVGV4dFRpY2tlcixcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzdHlsZTogeyBmb250U2l6ZTogMjQgfSxcbiAgICAgICAgICAgIGR1cmF0aW9uOiAzMDAwLFxuICAgICAgICAgICAgbG9vcDogdHJ1ZSxcbiAgICAgICAgICAgIGJvdW5jZTogdHJ1ZSxcbiAgICAgICAgICAgIHJlcGVhdFNwYWNlcjogNTAsXG4gICAgICAgICAgICBtYXJxdWVlRGVsYXk6IDEwMDAsXG4gICAgICAgICAgICBfX3NvdXJjZToge1xuICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICBsaW5lTnVtYmVyOiA0NVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgJ1N1cGVyIGxvbmcgcGllY2Ugb2YgdGV4dCBpcyBsb25nLiBUaGUgcXVpY2sgYnJvd24gZm94IGp1bXBzIG92ZXIgdGhlIGxhenkgZG9nLidcbiAgICAgICAgKSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBfX3NvdXJjZToge1xuICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICBsaW5lTnVtYmVyOiA1NVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICdoNycsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgICAgICBsaW5lTnVtYmVyOiA1NlxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ1dlIGFyZSBub3QgcmFzaW5nIGFueSBtb25leSwgd2UgYXJlIG9ubHkgYWNjZXB0aW5nIGRvbmF0aW9ucy4nLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgnYnInLCB7XG4gICAgICAgICAgICAgIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgICAgICBsaW5lTnVtYmVyOiA1N1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICcgZm9yIG1vcmUgaW5mbyBlbWFpbCBcXHhBMCcsXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAnYScsXG4gICAgICAgICAgICAgIHsgaHJlZjogJ21haWx0bzpOR19ZQU9fTUlOMDEuUFRASUNIQVQuU1AuRURVLlNHJywgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgICBsaW5lTnVtYmVyOiA1OFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAndScsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgbGluZU51bWJlcjogNTlcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdnaXZlbWV5b3VybW9uZXlAY2hlYXR5b3VybW9uZXkuaW8nXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCdicicsIHtcbiAgICAgICAgICAgICAgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDYxXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgJ3lvdSBjYW4gYWxzbyBzZWUgb3VyIGxhdGVzdCBzbWFydCBjb250cmFjdCcsXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCdicicsIHtcbiAgICAgICAgICAgICAgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDYzXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgJ2EnLFxuICAgICAgICAgICAgICB7IHRhcmdldDogJ19ibGFuaycsIGhyZWY6ICdodHRwczovL3JpbmtlYnkuZXRoZXJzY2FuLmlvL2FkZHJlc3MvMHhjN0E5ZTNFYWMyZEE2YTVEMURkNWE2MDU4YThiMERDNTMwYzVmNDFBJywgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgICBsaW5lTnVtYmVyOiA2NFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgJ1xcJzB4YzdBOWUzRWFjMmRBNmE1RDFEZDVhNjA1OGE4YjBEQzUzMGM1ZjQxQVxcJydcbiAgICAgICAgICAgIClcbiAgICAgICAgICApLFxuICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAnaDMnLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBfX3NvdXJjZToge1xuICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgbGluZU51bWJlcjogNjhcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICdPcGVuIEluc3VyYW5jZSBQb29scydcbiAgICAgICAgICApLFxuICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICBMaW5rLFxuICAgICAgICAgICAgeyByb3V0ZTogJy9pbnN1cmFuY2Vwb29scy9uZXcnLCBfX3NvdXJjZToge1xuICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgbGluZU51bWJlcjogNzBcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICdhJyxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgICAgbGluZU51bWJlcjogNzFcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgZmxvYXRlZDogJ3JpZ2h0JyxcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnQ3JlYXRlIEluc3VyYW5jZVBvb2wnLFxuICAgICAgICAgICAgICAgIGljb246ICdhZGQgY2lyY2xlJyAvLyB0aGUgaWNvbiBuYW1lIGlzIGluIGRvY3VtZW50LCBiZSBleGFjdFxuICAgICAgICAgICAgICAgICwgcHJpbWFyeTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBfX3NvdXJjZToge1xuICAgICAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDcyXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKVxuICAgICAgICAgICksXG4gICAgICAgICAgdGhpcy5yZW5kZXJJbnN1cmFuY2VQb29scygpXG4gICAgICAgIClcbiAgICAgICk7XG4gICAgfVxuICB9XSwgW3tcbiAgICBrZXk6ICdnZXRJbml0aWFsUHJvcHMnLFxuXG4gICAgLy8gY3JlYXRpbmcgYSBpbnN0YW5jZSBvZiBjbGFzcyB0byBnZXQgYWNjZXNzIHRvXG4gICAgLy8gc3RhdGljIGFzaWduIHRoZSBmdW5jdGlvbiBub3QgdG8gaW5zdGFuY2Ugb2YgdGhlIGNsYXNzIGJ1dCB0byBjbGFzcyBpdHNlbGZcblxuICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7XG4gICAgICAgIHZhciBpbnN1cmFuY2VQb29scztcbiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkge1xuICAgICAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFjdG9yeS5tZXRob2RzLmdldERlcGxveWVkSW5zdXJhbmNlUG9vbHMoKS5jYWxsKCk7XG5cbiAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgIGluc3VyYW5jZVBvb2xzID0gX2NvbnRleHQuc2VudDtcbiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCdyZXR1cm4nLCB7IGluc3VyYW5jZVBvb2xzOiBpbnN1cmFuY2VQb29scyB9KTtcblxuICAgICAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICAgIGNhc2UgJ2VuZCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpO1xuICAgICAgfSkpO1xuXG4gICAgICBmdW5jdGlvbiBnZXRJbml0aWFsUHJvcHMoKSB7XG4gICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBnZXRJbml0aWFsUHJvcHM7XG4gICAgfSgpXG4gIH1dKTtcblxuICByZXR1cm4gSW5zdXJhbmNlUG9vbEluZGV4O1xufShDb21wb25lbnQpO1xuXG5leHBvcnQgZGVmYXVsdCBJbnN1cmFuY2VQb29sSW5kZXg7Il19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwiSW5zdXJhbmNlUG9vbEluZGV4IiwiX0NvbXBvbmVudCIsIl9fcHJvdG9fXyIsImFwcGx5IiwiYXJndW1lbnRzIiwia2V5IiwidmFsdWUiLCJyZW5kZXJJbnN1cmFuY2VQb29scyIsIml0ZW1zIiwicHJvcHMiLCJpbnN1cmFuY2VQb29scyIsIm1hcCIsImFkZHJlc3MiLCJoZWFkZXIiLCJkZXNjcmlwdGlvbiIsImNyZWF0ZUVsZW1lbnQiLCJfX3NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsInJvdXRlIiwidGFyZ2V0IiwiZmx1aWQiLCJHcm91cCIsInJlbmRlciIsInN0eWxlIiwiZm9udFNpemUiLCJkdXJhdGlvbiIsImxvb3AiLCJib3VuY2UiLCJyZXBlYXRTcGFjZXIiLCJtYXJxdWVlRGVsYXkiLCJocmVmIiwiZmxvYXRlZCIsImNvbnRlbnQiLCJpY29uIiwicHJpbWFyeSIsIl9yZWYiLCJtYXJrIiwiX2NhbGxlZSIsIndyYXAiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwicHJldiIsIm5leHQiLCJtZXRob2RzIiwiZ2V0RGVwbG95ZWRJbnN1cmFuY2VQb29scyIsImNhbGwiLCJzZW50IiwiYWJydXB0Iiwic3RvcCIsImdldEluaXRpYWxQcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7Ozs7O0FBTkEsSUFBSUEsZUFBZSx5REFBbkI7OztBQVFBLElBQUlDLHFCQUFxQixVQUFVQyxVQUFWLEVBQXNCO0FBQzdDLDBCQUFVRCxrQkFBVixFQUE4QkMsVUFBOUI7O0FBRUEsV0FBU0Qsa0JBQVQsR0FBOEI7QUFDNUIsa0NBQWdCLElBQWhCLEVBQXNCQSxrQkFBdEI7O0FBRUEsV0FBTyx5Q0FBMkIsSUFBM0IsRUFBaUMs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

 ;(function register() { /* react-hot-loader/webpack */ if (true) { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : module.exports; /* eslint-enable camelcase, no-undef */ if (typeof webpackExports === 'function') { __REACT_HOT_LOADER__.register(webpackExports, 'module.exports', "/Users/yaomin/distributedInsurance/pages/index.js"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, "/Users/yaomin/distributedInsurance/pages/index.js"); } } })();
    (function (Component, route) {
      if (false) return
      if (false) return

      var qs = __webpack_require__(84)
      var params = qs.parse(__resourceQuery.slice(1))
      if (params.entry == null) return

      module.hot.accept()
      Component.__route = route

      if (module.hot.status() === 'idle') return

      var components = next.router.components
      for (var r in components) {
        if (!components.hasOwnProperty(r)) continue

        if (components[r].Component.__route === route) {
          next.router.update(r, Component)
        }
      }
    })(typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__.default : (module.exports.default || module.exports), "/")
  
/* WEBPACK VAR INJECTION */}.call(exports, "?entry"))

/***/ }),

/***/ 1561:
/***/ (function(module, exports) {

throw new Error("Module parse failed: /Users/yaomin/distributedInsurance/node_modules/react-native-text-ticker/index.js Unexpected token (25:19)\nYou may need an appropriate loader to handle this file type.\n| export default class TextMarquee extends PureComponent {\n| \n|   static propTypes = {\n|     style:             Text.propTypes.style,\n|     duration:          PropTypes.number,");

/***/ })

})