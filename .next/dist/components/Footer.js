'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _semanticUiReact = require('semantic-ui-react');

var _routes = require('../routes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = '/Users/yaomin/distributedInsurance/components/Footer.js';


var style = {
  borderTop: "1px solid #E7E7E7",
  padding: "0px",
  position: "fixed",
  left: "0",
  bottom: "35px",
  height: "0px",
  width: "100%"
};

var ThisComponent = function (_Component) {
  (0, _inherits3.default)(ThisComponent, _Component);

  function ThisComponent() {
    (0, _classCallCheck3.default)(this, ThisComponent);

    return (0, _possibleConstructorReturn3.default)(this, (ThisComponent.__proto__ || (0, _getPrototypeOf2.default)(ThisComponent)).apply(this, arguments));
  }

  (0, _createClass3.default)(ThisComponent, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement('div', { style: style, __source: {
          fileName: _jsxFileName,
          lineNumber: 18
        }
      }, _react2.default.createElement(_semanticUiReact.Menu, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 19
        }
      }, _react2.default.createElement(_semanticUiReact.Menu.Menu, { position: 'right', __source: {
          fileName: _jsxFileName,
          lineNumber: 20
        }
      }, _react2.default.createElement(_routes.Link, { route: 'https://github.com/ngyaomin/distributedInsurance1n2', __source: {
          fileName: _jsxFileName,
          lineNumber: 21
        }
      }, _react2.default.createElement('a', { className: 'item', target: '_blank', __source: {
          fileName: _jsxFileName,
          lineNumber: 22
        }
      }, _react2.default.createElement('i', { 'class': 'github icon', __source: {
          fileName: _jsxFileName,
          lineNumber: 23
        }
      }), 'GitHub Depository for this project')))));
    }
  }]);

  return ThisComponent;
}(_react.Component);

exports.default = ThisComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwic3R5bGUiLCJib3JkZXJUb3AiLCJwYWRkaW5nIiwicG9zaXRpb24iLCJsZWZ0IiwiYm90dG9tIiwiaGVpZ2h0Iiwid2lkdGgiLCJUaGlzQ29tcG9uZW50IiwiX0NvbXBvbmVudCIsIl9fcHJvdG9fXyIsImFwcGx5IiwiYXJndW1lbnRzIiwia2V5IiwidmFsdWUiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJNZW51Iiwicm91dGUiLCJjbGFzc05hbWUiLCJ0YXJnZXQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOztBQUNBOzs7O0FBSEEsSUFBSUEsZUFBZSx5REFBbkI7OztBQUtBLElBQUlDLFFBQVE7QUFDVkMsYUFBVyxtQkFERDtBQUVWQyxXQUFTLEtBRkM7QUFHVkMsWUFBVSxPQUhBO0FBSVZDLFFBQU0sR0FKSTtBQUtWQyxVQUFRLE1BTEU7QUFNVkMsVUFBUSxLQU5FO0FBT1ZDLFNBQU87QUFQRyxDQUFaOztBQVVBLElBQUlDLGdCQUFnQixVQUFVQyxVQUFWLEVBQXNCO0FBQ3hDLDBCQUFVRCxhQUFWLEVBQXlCQyxVQUF6Qjs7QUFFQSxXQUFTRCxhQUFULEdBQXlCO0FBQ3ZCLGtDQUFnQixJQUFoQixFQUFzQkEsYUFBdEI7O0FBRUEsV0FBTyx5Q0FBMkIsSUFBM0IsRUFBaUMsQ0FBQ0EsY0FBY0UsU0FBZCxJQUEyQiw4QkFBdUJGLGFBQXZCLENBQTVCLEVBQW1FRyxLQUFuRSxDQUF5RSxJQUF6RSxFQUErRUMsU0FBL0UsQ0FBakMsQ0FBUDtBQUNEOztBQUVELDZCQUFhSixhQUFiLEVBQTRCLENBQUM7QUFDM0JLLFNBQUssUUFEc0I7QUFFM0JDLFdBQU8sU0FBU0MsTUFBVCxHQUFrQjtBQUN2QixhQUFPLGdCQUFNQyxhQUFOLENBQ0wsS0FESyxFQUVMLEVBQUVoQixPQUFPQSxLQUFULEVBQWdCaUIsVUFBVTtBQUN0QkMsb0JBQVVuQixZQURZO0FBRXRCb0Isc0JBQVk7QUFGVTtBQUExQixPQUZLLEVBT0wsZ0JBQU1ILGFBQU4sd0JBRUU7QUFDRUMsa0JBQVU7QUFDUkMsb0JBQVVuQixZQURGO0FBRVJvQixzQkFBWTtBQUZKO0FBRFosT0FGRixFQVFFLGdCQUFNSCxhQUFOLENBQ0Usc0JBQUtJLElBRFAsRUFFRSxFQUFFakIsVUFBVSxPQUFaLEVBQXFCYyxVQUFVO0FBQzNCQyxvQkFBVW5CLFlBRGlCO0FBRTNCb0Isc0JBQVk7QUFGZTtBQUEvQixPQUZGLEVBT0UsZ0JBQU1ILGFBQU4sZUFFRSxFQUFFSyxPQUFPLHFEQUFULEVBQWdFSixVQUFVO0FBQ3RFQyxvQkFBVW5CLFlBRDREO0FBRXRFb0Isc0JBQVk7QUFGMEQ7QUFBMUUsT0FGRixFQU9FLGdCQUFNSCxhQUFOLENBQ0UsR0FERixFQUVFLEVBQUVNLFdBQVcsTUFBYixFQUFxQkMsUUFBUSxRQUE3QixFQUF1Q04sVUFBVTtBQUM3Q0Msb0JBQVVuQixZQURtQztBQUU3Q29CLHNCQUFZO0FBRmlDO0FBQWpELE9BRkYsRUFPRSxnQkFBTUgsYUFBTixDQUFvQixHQUFwQixFQUF5QixFQUFFLFNBQVMsYUFBWCxFQUEwQkMsVUFBVTtBQUN6REMsb0JBQVVuQixZQUQrQztBQUV6RG9CLHNCQUFZO0FBRjZDO0FBQXBDLE9BQXpCLENBUEYsRUFZRSxvQ0FaRixDQVBGLENBUEYsQ0FSRixDQVBLLENBQVA7QUErQ0Q7QUFsRDBCLEdBQUQsQ0FBNUI7O0FBcURBLFNBQU9YLGFBQVA7QUFDRCxDQS9EbUIsa0JBQXBCOztrQkFpRWVBLGEiLCJmaWxlIjoidW5rbm93biIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfT2JqZWN0JGdldFByb3RvdHlwZU9mIGZyb20gJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZic7XG5pbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayc7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyc7XG5pbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAnYmFiZWwtcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4nO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tICdiYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMnO1xudmFyIF9qc3hGaWxlTmFtZSA9ICcvVXNlcnMveWFvbWluL2Rpc3RyaWJ1dGVkSW5zdXJhbmNlL2NvbXBvbmVudHMvRm9vdGVyLmpzJztcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBNZW51IH0gZnJvbSAnc2VtYW50aWMtdWktcmVhY3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJy4uL3JvdXRlcyc7XG5cbnZhciBzdHlsZSA9IHtcbiAgYm9yZGVyVG9wOiBcIjFweCBzb2xpZCAjRTdFN0U3XCIsXG4gIHBhZGRpbmc6IFwiMHB4XCIsXG4gIHBvc2l0aW9uOiBcImZpeGVkXCIsXG4gIGxlZnQ6IFwiMFwiLFxuICBib3R0b206IFwiMzVweFwiLFxuICBoZWlnaHQ6IFwiMHB4XCIsXG4gIHdpZHRoOiBcIjEwMCVcIlxufTtcblxudmFyIFRoaXNDb21wb25lbnQgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoVGhpc0NvbXBvbmVudCwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gVGhpc0NvbXBvbmVudCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVGhpc0NvbXBvbmVudCk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFRoaXNDb21wb25lbnQuX19wcm90b19fIHx8IF9PYmplY3QkZ2V0UHJvdG90eXBlT2YoVGhpc0NvbXBvbmVudCkpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFRoaXNDb21wb25lbnQsIFt7XG4gICAga2V5OiAncmVuZGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICdkaXYnLFxuICAgICAgICB7IHN0eWxlOiBzdHlsZSwgX19zb3VyY2U6IHtcbiAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICBsaW5lTnVtYmVyOiAxOFxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICBNZW51LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDE5XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgTWVudS5NZW51LFxuICAgICAgICAgICAgeyBwb3NpdGlvbjogJ3JpZ2h0JywgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDIwXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICBMaW5rLFxuICAgICAgICAgICAgICB7IHJvdXRlOiAnaHR0cHM6Ly9naXRodWIuY29tL25neWFvbWluL2Rpc3RyaWJ1dGVkSW5zdXJhbmNlMW4yJywgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgICBsaW5lTnVtYmVyOiAyMVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAnYScsXG4gICAgICAgICAgICAgICAgeyBjbGFzc05hbWU6ICdpdGVtJywgdGFyZ2V0OiAnX2JsYW5rJywgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgbGluZU51bWJlcjogMjJcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoJ2knLCB7ICdjbGFzcyc6ICdnaXRodWIgaWNvbicsIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDIzXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgJ0dpdEh1YiBEZXBvc2l0b3J5IGZvciB0aGlzIHByb2plY3QnXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIClcbiAgICAgICAgICApXG4gICAgICAgIClcbiAgICAgICk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFRoaXNDb21wb25lbnQ7XG59KENvbXBvbmVudCk7XG5cbmV4cG9ydCBkZWZhdWx0IFRoaXNDb21wb25lbnQ7Il19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwic3R5bGUiLCJib3JkZXJUb3AiLCJwYWRkaW5nIiwicG9zaXRpb24iLCJsZWZ0IiwiYm90dG9tIiwiaGVpZ2h0Iiwid2lkdGgiLCJUaGlzQ29tcG9uZW50IiwiX0NvbXBvbmVudCIsIl9fcHJvdG9fXyIsImFwcGx5IiwiYXJndW1lbnRzIiwia2V5IiwidmFsdWUiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJNZW51Iiwicm91dGUiLCJjbGFzc05hbWUiLCJ0YXJnZXQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOztBQUNBOzs7O0FBSEEsSUFBSUEsZUFBZSx5REFBbkI7OztBQUtBLElBQUlDLFFBQVE7QUFDVkMsYUFBVyxtQkFERDtBQUVWQyxXQUFTLEtBRkM7QUFHVkMsWUFBVSxPQUhBO0FBSVZDLFFBQU0sR0FKSTtBQUtWQyxVQUFRLE1BTEU7QUFNVkMsVUFBUSxLQU5FO0FBT1ZDLFNBQU87QUFQRyxDQUFaOztBQVVBLElBQUlDLGdCQUFnQixVQUFVQyxVQUFWLEVBQXNCO0FBQ3hDLDBCQUFVRCxhQUFWLEVBQXlCQyxVQUF6Qjs7QUFFQSxXQUFTRCxhQUFULEdBQXlCO0FBQ3ZCLGtDQUFnQixJQUFoQixFQUFzQkEsYUFBdEI7O0FBRUEsV0FBTyx5Q0FBMkIsSUFBM0IsRUFBaUMsQ0FBQ0EsY0FBY0UsU0FBZCxJQUEyQiw4QkFBdUJGLGFBQXZCLENBQTVCLEVBQW1FRyxLQUFuRSxDQUF5RSxJQUF6RSxFQUErRUMsU0FBL0UsQ0FBakMsQ0FBUDtBQUNEOztBQUVELDZCQUFhSixhQUFiLEVBQTRCLENBQUM7QUFDM0JLLFNBQUssUUFEc0I7QUFFM0JDLFdBQU8sU0FBU0MsTUFBVCxHQUFrQjtBQUN2QixhQUFPLGdCQUFNQyxhQUFOLENBQ0wsS0FESyxFQUVMLEVBQUVoQixPQUFPQSxLQUFULEVBQWdCaUIsVUFBVTtBQUN0QkMsb0JBQVVuQixZQURZO0FBRXRCb0Isc0JBQVk7QUFGVTtBQUExQixPQUZLLEVBT0wsZ0JBQU1ILGFBQU4sd0JBRUU7QUFDRUMsa0JBQVU7QUFDUkMsb0JBQVVuQixZQURGO0FBRVJvQixzQkFBWTtBQUZKO0FBRFosT0FGRixFQVFFLGdCQUFNSCxhQUFOLENBQ0Usc0JBQUtJLElBRFAsRUFFRSxFQUFFakIsVUFBVSxPQUFaLEVBQXFCYyxVQUFVO0FBQzNCQyxvQkFBVW5CLFlBRGlCO0FBRTNCb0Isc0JBQVk7QUFGZTtBQUEvQixPQUZGLEVBT0UsZ0JBQU1ILGFBQU4sZUFFRSxFQUFFSyxPQUFPLHFEQUFULEVBQWdFSixVQUFVO0FBQ3RFQyxvQkFBVW5CLFlBRDREO0FBRXRFb0Isc0JBQVk7QUFGMEQ7QUFBMUUsT0FGRixFQU9FLGdCQUFNSCxhQUFOLENBQ0UsR0FERixFQUVFLEVBQUVNLFdBQVcsTUFBYixFQUFxQkMsUUFBUSxRQUE3QixFQUF1Q04sVUFBVTtBQUM3Q0Msb0JBQVVuQixZQURtQztBQUU3Q29CLHNCQUFZO0FBRmlDO0FBQWpELE9BRkYsRUFPRSxnQkFBTUgsYUFBTixDQUFvQixHQUFwQixFQUF5QixFQUFFLFNBQVMsYUFBWCxFQUEwQkMsVUFBVTtBQUN6REMsb0JBQVVuQixZQUQrQztBQUV6RG9CLHNCQUFZO0FBRjZDO0FBQXBDLE9BQXpCLENBUEYsRUFZRSxvQ0FaRixDQVBGLENBUEYsQ0FSRixDQVBLLENBQVA7QUErQ0Q7QUFsRDBCLEdBQUQsQ0FBNUI7O0FBcURBLFNBQU9YLGFBQVA7QUFDRCxDQS9EbUIsa0JBQXBCOztrQkFpRWVBLGEiLCJmaWxlIjoidW5rbm93biJ9