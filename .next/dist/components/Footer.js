'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _semanticUiReact = require('semantic-ui-react');

var _routes = require('../routes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = '/Users/yaomin/distributedInsurance/components/Footer.js';


var style = {
  borderTop: "1px solid #E7E7E7",
  textAlign: "center",
  padding: "0px",
  position: "fixed",
  left: "0",
  bottom: "35px",
  height: "0px",
  width: "100%"
};

var ThisComponent = function (_Component) {
  (0, _inherits3.default)(ThisComponent, _Component);

  function ThisComponent() {
    (0, _classCallCheck3.default)(this, ThisComponent);

    return (0, _possibleConstructorReturn3.default)(this, (ThisComponent.__proto__ || (0, _getPrototypeOf2.default)(ThisComponent)).apply(this, arguments));
  }

  (0, _createClass3.default)(ThisComponent, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement('div', { style: style, __source: {
          fileName: _jsxFileName,
          lineNumber: 19
        }
      }, _react2.default.createElement(_semanticUiReact.Menu, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 20
        }
      }, _react2.default.createElement(_semanticUiReact.Menu.Menu, { position: 'right', __source: {
          fileName: _jsxFileName,
          lineNumber: 21
        }
      }, _react2.default.createElement(_routes.Link, { route: 'https://github.com/ngyaomin/distributedInsurance1n2', __source: {
          fileName: _jsxFileName,
          lineNumber: 22
        }
      }, _react2.default.createElement('a', { className: 'item', target: '_blank', __source: {
          fileName: _jsxFileName,
          lineNumber: 23
        }
      }, _react2.default.createElement('i', { 'class': 'github icon', __source: {
          fileName: _jsxFileName,
          lineNumber: 24
        }
      }), 'GitHub Depository for this project')))));
    }
  }]);

  return ThisComponent;
}(_react.Component);

exports.default = ThisComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwic3R5bGUiLCJib3JkZXJUb3AiLCJ0ZXh0QWxpZ24iLCJwYWRkaW5nIiwicG9zaXRpb24iLCJsZWZ0IiwiYm90dG9tIiwiaGVpZ2h0Iiwid2lkdGgiLCJUaGlzQ29tcG9uZW50IiwiX0NvbXBvbmVudCIsIl9fcHJvdG9fXyIsImFwcGx5IiwiYXJndW1lbnRzIiwia2V5IiwidmFsdWUiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJNZW51Iiwicm91dGUiLCJjbGFzc05hbWUiLCJ0YXJnZXQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOztBQUNBOzs7O0FBSEEsSUFBSUEsZUFBZSx5REFBbkI7OztBQUtBLElBQUlDLFFBQVE7QUFDVkMsYUFBVyxtQkFERDtBQUVWQyxhQUFXLFFBRkQ7QUFHVkMsV0FBUyxLQUhDO0FBSVZDLFlBQVUsT0FKQTtBQUtWQyxRQUFNLEdBTEk7QUFNVkMsVUFBUSxNQU5FO0FBT1ZDLFVBQVEsS0FQRTtBQVFWQyxTQUFPO0FBUkcsQ0FBWjs7QUFXQSxJQUFJQyxnQkFBZ0IsVUFBVUMsVUFBVixFQUFzQjtBQUN4QywwQkFBVUQsYUFBVixFQUF5QkMsVUFBekI7O0FBRUEsV0FBU0QsYUFBVCxHQUF5QjtBQUN2QixrQ0FBZ0IsSUFBaEIsRUFBc0JBLGFBQXRCOztBQUVBLFdBQU8seUNBQTJCLElBQTNCLEVBQWlDLENBQUNBLGNBQWNFLFNBQWQsSUFBMkIsOEJBQXVCRixhQUF2QixDQUE1QixFQUFtRUcsS0FBbkUsQ0FBeUUsSUFBekUsRUFBK0VDLFNBQS9FLENBQWpDLENBQVA7QUFDRDs7QUFFRCw2QkFBYUosYUFBYixFQUE0QixDQUFDO0FBQzNCSyxTQUFLLFFBRHNCO0FBRTNCQyxXQUFPLFNBQVNDLE1BQVQsR0FBa0I7QUFDdkIsYUFBTyxnQkFBTUMsYUFBTixDQUNMLEtBREssRUFFTCxFQUFFakIsT0FBT0EsS0FBVCxFQUFnQmtCLFVBQVU7QUFDdEJDLG9CQUFVcEIsWUFEWTtBQUV0QnFCLHNCQUFZO0FBRlU7QUFBMUIsT0FGSyxFQU9MLGdCQUFNSCxhQUFOLHdCQUVFO0FBQ0VDLGtCQUFVO0FBQ1JDLG9CQUFVcEIsWUFERjtBQUVScUIsc0JBQVk7QUFGSjtBQURaLE9BRkYsRUFRRSxnQkFBTUgsYUFBTixDQUNFLHNCQUFLSSxJQURQLEVBRUUsRUFBRWpCLFVBQVUsT0FBWixFQUFxQmMsVUFBVTtBQUMzQkMsb0JBQVVwQixZQURpQjtBQUUzQnFCLHNCQUFZO0FBRmU7QUFBL0IsT0FGRixFQU9FLGdCQUFNSCxhQUFOLGVBRUUsRUFBRUssT0FBTyxxREFBVCxFQUFnRUosVUFBVTtBQUN0RUMsb0JBQVVwQixZQUQ0RDtBQUV0RXFCLHNCQUFZO0FBRjBEO0FBQTFFLE9BRkYsRUFPRSxnQkFBTUgsYUFBTixDQUNFLEdBREYsRUFFRSxFQUFFTSxXQUFXLE1BQWIsRUFBcUJDLFFBQVEsUUFBN0IsRUFBdUNOLFVBQVU7QUFDN0NDLG9CQUFVcEIsWUFEbUM7QUFFN0NxQixzQkFBWTtBQUZpQztBQUFqRCxPQUZGLEVBT0UsZ0JBQU1ILGFBQU4sQ0FBb0IsR0FBcEIsRUFBeUIsRUFBRSxTQUFTLGFBQVgsRUFBMEJDLFVBQVU7QUFDekRDLG9CQUFVcEIsWUFEK0M7QUFFekRxQixzQkFBWTtBQUY2QztBQUFwQyxPQUF6QixDQVBGLEVBWUUsb0NBWkYsQ0FQRixDQVBGLENBUkYsQ0FQSyxDQUFQO0FBK0NEO0FBbEQwQixHQUFELENBQTVCOztBQXFEQSxTQUFPWCxhQUFQO0FBQ0QsQ0EvRG1CLGtCQUFwQjs7a0JBaUVlQSxhIiwiZmlsZSI6InVua25vd24iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX09iamVjdCRnZXRQcm90b3R5cGVPZiBmcm9tICdiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YnO1xuaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2snO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MnO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuJztcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSAnYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzJztcbnZhciBfanN4RmlsZU5hbWUgPSAnL1VzZXJzL3lhb21pbi9kaXN0cmlidXRlZEluc3VyYW5jZS9jb21wb25lbnRzL0Zvb3Rlci5qcyc7XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTWVudSB9IGZyb20gJ3NlbWFudGljLXVpLXJlYWN0JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICcuLi9yb3V0ZXMnO1xuXG52YXIgc3R5bGUgPSB7XG4gIGJvcmRlclRvcDogXCIxcHggc29saWQgI0U3RTdFN1wiLFxuICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gIHBhZGRpbmc6IFwiMHB4XCIsXG4gIHBvc2l0aW9uOiBcImZpeGVkXCIsXG4gIGxlZnQ6IFwiMFwiLFxuICBib3R0b206IFwiMzVweFwiLFxuICBoZWlnaHQ6IFwiMHB4XCIsXG4gIHdpZHRoOiBcIjEwMCVcIlxufTtcblxudmFyIFRoaXNDb21wb25lbnQgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoVGhpc0NvbXBvbmVudCwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gVGhpc0NvbXBvbmVudCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVGhpc0NvbXBvbmVudCk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFRoaXNDb21wb25lbnQuX19wcm90b19fIHx8IF9PYmplY3QkZ2V0UHJvdG90eXBlT2YoVGhpc0NvbXBvbmVudCkpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFRoaXNDb21wb25lbnQsIFt7XG4gICAga2V5OiAncmVuZGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICdkaXYnLFxuICAgICAgICB7IHN0eWxlOiBzdHlsZSwgX19zb3VyY2U6IHtcbiAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICBsaW5lTnVtYmVyOiAxOVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICBNZW51LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDIwXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgTWVudS5NZW51LFxuICAgICAgICAgICAgeyBwb3NpdGlvbjogJ3JpZ2h0JywgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDIxXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICBMaW5rLFxuICAgICAgICAgICAgICB7IHJvdXRlOiAnaHR0cHM6Ly9naXRodWIuY29tL25neWFvbWluL2Rpc3RyaWJ1dGVkSW5zdXJhbmNlMW4yJywgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgICBsaW5lTnVtYmVyOiAyMlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAnYScsXG4gICAgICAgICAgICAgICAgeyBjbGFzc05hbWU6ICdpdGVtJywgdGFyZ2V0OiAnX2JsYW5rJywgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgbGluZU51bWJlcjogMjNcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoJ2knLCB7ICdjbGFzcyc6ICdnaXRodWIgaWNvbicsIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDI0XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgJ0dpdEh1YiBEZXBvc2l0b3J5IGZvciB0aGlzIHByb2plY3QnXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIClcbiAgICAgICAgICApXG4gICAgICAgIClcbiAgICAgICk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFRoaXNDb21wb25lbnQ7XG59KENvbXBvbmVudCk7XG5cbmV4cG9ydCBkZWZhdWx0IFRoaXNDb21wb25lbnQ7Il19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwic3R5bGUiLCJib3JkZXJUb3AiLCJ0ZXh0QWxpZ24iLCJwYWRkaW5nIiwicG9zaXRpb24iLCJsZWZ0IiwiYm90dG9tIiwiaGVpZ2h0Iiwid2lkdGgiLCJUaGlzQ29tcG9uZW50IiwiX0NvbXBvbmVudCIsIl9fcHJvdG9fXyIsImFwcGx5IiwiYXJndW1lbnRzIiwia2V5IiwidmFsdWUiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJNZW51Iiwicm91dGUiLCJjbGFzc05hbWUiLCJ0YXJnZXQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOztBQUNBOzs7O0FBSEEsSUFBSUEsZUFBZSx5REFBbkI7OztBQUtBLElBQUlDLFFBQVE7QUFDVkMsYUFBVyxtQkFERDtBQUVWQyxhQUFXLFFBRkQ7QUFHVkMsV0FBUyxLQUhDO0FBSVZDLFlBQVUsT0FKQTtBQUtWQyxRQUFNLEdBTEk7QUFNVkMsVUFBUSxNQU5FO0FBT1ZDLFVBQVEsS0FQRTtBQVFWQyxTQUFPO0FBUkcsQ0FBWjs7QUFXQSxJQUFJQyxnQkFBZ0IsVUFBVUMsVUFBVixFQUFzQjtBQUN4QywwQkFBVUQsYUFBVixFQUF5QkMsVUFBekI7O0FBRUEsV0FBU0QsYUFBVCxHQUF5QjtBQUN2QixrQ0FBZ0IsSUFBaEIsRUFBc0JBLGFBQXRCOztBQUVBLFdBQU8seUNBQTJCLElBQTNCLEVBQWlDLENBQUNBLGNBQWNFLFNBQWQsSUFBMkIsOEJBQXVCRixhQUF2QixDQUE1QixFQUFtRUcsS0FBbkUsQ0FBeUUsSUFBekUsRUFBK0VDLFNBQS9FLENBQWpDLENBQVA7QUFDRDs7QUFFRCw2QkFBYUosYUFBYixFQUE0QixDQUFDO0FBQzNCSyxTQUFLLFFBRHNCO0FBRTNCQyxXQUFPLFNBQVNDLE1BQVQsR0FBa0I7QUFDdkIsYUFBTyxnQkFBTUMsYUFBTixDQUNMLEtBREssRUFFTCxFQUFFakIsT0FBT0EsS0FBVCxFQUFnQmtCLFVBQVU7QUFDdEJDLG9CQUFVcEIsWUFEWTtBQUV0QnFCLHNCQUFZO0FBRlU7QUFBMUIsT0FGSyxFQU9MLGdCQUFNSCxhQUFOLHdCQUVFO0FBQ0VDLGtCQUFVO0FBQ1JDLG9CQUFVcEIsWUFERjtBQUVScUIsc0JBQVk7QUFGSjtBQURaLE9BRkYsRUFRRSxnQkFBTUgsYUFBTixDQUNFLHNCQUFLSSxJQURQLEVBRUUsRUFBRWpCLFVBQVUsT0FBWixFQUFxQmMsVUFBVTtBQUMzQkMsb0JBQVVwQixZQURpQjtBQUUzQnFCLHNCQUFZO0FBRmU7QUFBL0IsT0FGRixFQU9FLGdCQUFNSCxhQUFOLGVBRUUsRUFBRUssT0FBTyxxREFBVCxFQUFnRUosVUFBVTtBQUN0RUMsb0JBQVVwQixZQUQ0RDtBQUV0RXFCLHNCQUFZO0FBRjBEO0FBQTFFLE9BRkYsRUFPRSxnQkFBTUgsYUFBTixDQUNFLEdBREYsRUFFRSxFQUFFTSxXQUFXLE1BQWIsRUFBcUJDLFFBQVEsUUFBN0IsRUFBdUNOLFVBQVU7QUFDN0NDLG9CQUFVcEIsWUFEbUM7QUFFN0NxQixzQkFBWTtBQUZpQztBQUFqRCxPQUZGLEVBT0UsZ0JBQU1ILGFBQU4sQ0FBb0IsR0FBcEIsRUFBeUIsRUFBRSxTQUFTLGFBQVgsRUFBMEJDLFVBQVU7QUFDekRDLG9CQUFVcEIsWUFEK0M7QUFFekRxQixzQkFBWTtBQUY2QztBQUFwQyxPQUF6QixDQVBGLEVBWUUsb0NBWkYsQ0FQRixDQVBGLENBUkYsQ0FQSyxDQUFQO0FBK0NEO0FBbEQwQixHQUFELENBQTVCOztBQXFEQSxTQUFPWCxhQUFQO0FBQ0QsQ0EvRG1CLGtCQUFwQjs7a0JBaUVlQSxhIiwiZmlsZSI6InVua25vd24ifQ==